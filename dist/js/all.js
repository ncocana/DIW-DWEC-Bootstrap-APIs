const DB_NAME="pokemons",DB_TABLE_POKEMONS="pokemons",DB_TABLE_FAV_POKEMONS="fav_pokemons",DB_TABLE_SUBSCRIBERS="subscribers",API_FETCH_LINK="https://pokeapi.co/api/v2/";async function getPokemon(e){try{var t,a=await fetch(API_FETCH_LINK+"pokemon/"+e);if(a.ok)return{abilities:(t=await a.json()).abilities,base_experience:t.base_experience,forms:t.forms,game_indices:t.game_indices,height:t.height,held_items:t.held_items,id:t.id,is_default:t.is_default,location_area_encounters:t.location_area_encounters,moves:t.moves,name:t.name,order:t.order,past_abilities:t.past_abilities,past_types:t.past_types,species:t.species,sprites:t.sprites,stats:t.stats,types:t.types,weight:t.weight};throw 404===a.status?new Error("Pokemon not found."):new Error("Failed to fetch Pokemon. Status: "+a.status)}catch(e){return console.error(e),{error:"Failed to fetch Pokemon. Check the console for details."}}}function dataAddPokemon(e){return{abilities:e.abilities,base_experience:e.base_experience,forms:e.forms,game_indices:e.game_indices,height:e.height,held_items:e.held_items,id:e.id,is_default:e.is_default,location_area_encounters:e.location_area_encounters,moves:e.moves,name:e.name,order:e.order,past_abilities:e.past_abilities,past_types:e.past_types,species:e.species,sprites:e.sprites,stats:e.stats,types:e.types,weight:e.weight}}async function addPokemonUntilNoMore(e){let t=1;for(;;)try{var a=await getPokemon(t);if(void 0===a.id)break;e.transaction([DB_TABLE_POKEMONS],"readwrite").objectStore(DB_TABLE_POKEMONS).add(dataAddPokemon(a)),t++}catch(e){console.error("Error adding Pokemon: ",e);break}}!async function(){indexedDB.open(DB_NAME,1).onupgradeneeded=async function(e){e=e.target.result;e.objectStoreNames.contains(DB_TABLE_POKEMONS)||e.createObjectStore(DB_TABLE_POKEMONS,{autoIncrement:!0}).createIndex("Name","name",{unique:!0}),e.objectStoreNames.contains(DB_TABLE_FAV_POKEMONS)||e.createObjectStore(DB_TABLE_FAV_POKEMONS,{keyPath:"data.name"}).createIndex("Name","data.name",{unique:!0}),e.objectStoreNames.contains(DB_TABLE_SUBSCRIBERS)||e.createObjectStore(DB_TABLE_SUBSCRIBERS,{keyPath:"email"}).createIndex("Email","email",{unique:!0}),await addPokemonUntilNoMore(e)}}();
const INPUT_POKEMON_NAME="inputPokemonName",INPUT_POKEMON_STATUS="inputPokemonStatus",INPUT_SUBSCRIBER_EMAIL="subscriberEmail",db_openRequest=indexedDB.open(DB_NAME,1);async function openDatabase(){return new Promise((o,t)=>{var e=indexedDB.open(DB_NAME,1);e.onsuccess=function(e){e=e.target.result;o(e)},e.onerror=function(e){t(new Error("Error opening database: "+e.target.error))}})}async function getAllPokemon(){return new Promise((o,t)=>{var e=db_openRequest.result.transaction(DB_TABLE_POKEMONS,"readonly").objectStore(DB_TABLE_POKEMONS).openCursor();const n=[];e.onsuccess=function(e){e=e.target.result;e?(n.push(e.value),e.continue()):o(n)},e.onerror=function(e){t(new Error("Failed to get all Pokemon data."))}})}async function getOnePokemon(n=""){return new Promise((o,t)=>{var e=db_openRequest.result.transaction(DB_TABLE_POKEMONS,"readonly").objectStore(DB_TABLE_POKEMONS).index("Name"),e=(n=n||document.getElementById(INPUT_POKEMON_NAME).value,e.openCursor(IDBKeyRange.only(n.toLowerCase())));e.onsuccess=function(e){e=e.target.result;o(e?e.value:null)},e.onerror=function(e){t(new Error("Failed to get Pokemon data."))}})}async function getAllFavPokemon(){try{const e=(await openDatabase()).transaction(DB_TABLE_FAV_POKEMONS,"readonly").objectStore(DB_TABLE_FAV_POKEMONS).getAll();return new Promise((o,t)=>{e.onsuccess=e=>{e=e.target.result;o(e)},e.onerror=e=>{t(new Error("Failed to get all favorite Pokemon data."))}})}catch(e){console.error(e.message)}}async function getOneFavPokemon(n=""){return new Promise((o,t)=>{var e=db_openRequest.result.transaction(DB_TABLE_FAV_POKEMONS,"readonly").objectStore(DB_TABLE_FAV_POKEMONS).index("Name"),e=(n=n||document.getElementById(INPUT_POKEMON_NAME).value,e.openCursor(IDBKeyRange.only(n.toLowerCase())));e.onsuccess=function(e){e=e.target.result;o(e?e.value:null)},e.onerror=function(e){t(new Error("Failed to get favorite Pokemon data."))}})}async function insertFavPokemon(){var e=document.getElementById(INPUT_POKEMON_NAME).value;let o;o=document.getElementById(INPUT_POKEMON_STATUS)?document.getElementById(INPUT_POKEMON_STATUS).value:"";try{var t,n,r=await getOnePokemon(e);r&&(t=db_openRequest.result.transaction(DB_TABLE_FAV_POKEMONS,"readwrite").objectStore(DB_TABLE_FAV_POKEMONS),n={data:r,status:o},t.add(n).onsuccess=function(e){"/pokemonfavourite"==window.location.pathname||"/src/pokemonfavourite.html"==window.location.pathname||"/dist/pokemonfavourite.html"==window.location.pathname?location.reload():showMessage("Pokemon added successfully!")})}catch(e){console.error(e.message)}}async function updateFavPokemon(e,o){o=(await getAllFavPokemon())[o];try{o&&(o.status=e,db_openRequest.result.transaction(DB_TABLE_FAV_POKEMONS,"readwrite").objectStore(DB_TABLE_FAV_POKEMONS).put(o))}catch(e){console.error(e.message)}}async function deleteFavPokemon(e=""){try{(e=""==e?document.getElementById(INPUT_POKEMON_NAME).value.toLowerCase():e)?db_openRequest.result.transaction(DB_TABLE_FAV_POKEMONS,"readwrite").objectStore(DB_TABLE_FAV_POKEMONS).delete(e).onsuccess=function(e){location.reload()}:console.error("Element with ID 'inputPokemonName' not found.")}catch(e){console.error(e.message)}}function insertSubscriber(){var e,o,t=document.getElementById(INPUT_SUBSCRIBER_EMAIL).value;try{t&&(e=db_openRequest.result.transaction(DB_TABLE_SUBSCRIBERS,"readwrite").objectStore(DB_TABLE_SUBSCRIBERS),o={email:t},e.add(o))}catch(e){console.error(e.message)}}function deleteSubscriber(){var e=document.getElementById(INPUT_SUBSCRIBER_EMAIL).value;try{db_openRequest.result.transaction(DB_TABLE_SUBSCRIBERS,"readwrite").objectStore(DB_TABLE_SUBSCRIBERS).delete(e)}catch(e){console.error(e.message)}}function showMessage(e){alert(e)}
let selectedPuzzle="img1";function restartPuzzle(){selectedPuzzle=document.getElementById("puzzle-select").value;for(var l=document.getElementById("images"),e=document.getElementById("puzzle");l.firstChild;)l.removeChild(l.firstChild);for(;e.firstChild;)e.removeChild(e.firstChild);document.getElementById("game").className="d-flex flex-wrap justify-content-around flex-row";for(let t=0;t<3;t++){var d=document.createElement("div");d.className="row";for(let e=0;e<3;e++){var a=document.createElement("div");a.id="div"+(t+3*e+1),a.className="col-4",a.ondrop=drop,a.ondragover=allowDrop,d.appendChild(a)}e.appendChild(d)}document.getElementById("completion-message").innerHTML="";for(let t=0;t<3;t++)for(let e=0;e<3;e++){var n=document.createElement("img");n.id="drag"+(t+3*e+1),n.alt="drag"+(t+3*e+1),n.src="./assets/splitted/"+selectedPuzzle+"/"+t+e+".jpg",n.draggable=!0,n.ondragstart=drag,l.appendChild(n)}}function checkPuzzle(){var e=document.querySelectorAll("#puzzle div div");let l=!0;e.forEach(function(e,t){e.firstElementChild.id!=="drag"+(t+1)&&(l=!1)}),l&&(document.getElementById("completion-message").innerHTML="<p>Congratulations! You've completed the puzzle!</p>",document.getElementById("completion-message").firstChild.className="alert alert-success m-3",document.getElementById("completion-message").firstChild.role="alert",document.getElementById("puzzle").innerHTML="<img id='img-completed' alt='img-completed' src='./assets/original/"+selectedPuzzle+".jpg'>",document.getElementById("game").className="d-flex flex-wrap justify-content-around flex-column")}function allowDrop(e){e.preventDefault()}function drag(e){e.dataTransfer.setData("text",e.target.id)}function drop(e){e.preventDefault();var t=e.dataTransfer.getData("text"),e=e.target;"img"!==e.tagName.toLowerCase()&&0===e.childElementCount&&(e.appendChild(document.getElementById(t)),checkPuzzle())}